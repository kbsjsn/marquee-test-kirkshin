{"ast":null,"code":"import _readOnlyError from \"@babel/runtime/helpers/esm/readOnlyError\";\nvar _jsxFileName = \"/Users/kirkshin/Documents/code/career/job-takehomes/marquee-test-kirkshin/components/Layout.jsx\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { useContext } from 'react';\nimport Head from 'next/head';\nimport Header from './Header';\nimport DataContext from './DataContext';\nimport Marquee from './Marquee';\nimport './Layout.scss';\nexport default function Layout(_ref) {\n  var children = _ref.children,\n      pageTitle = _ref.pageTitle;\n\n  var _useContext = useContext(DataContext),\n      pages = _useContext.pages;\n\n  console.log('pages..', pages);\n\n  if (!pages) {\n    return __jsx(React.Fragment, null, __jsx(Head, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 14\n      },\n      __self: this\n    }, __jsx(\"title\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 15\n      },\n      __self: this\n    }, \"Marquee Test\"), __jsx(\"meta\", {\n      name: \"viewport\",\n      content: \"initial-scale=1.0, width=device-width\",\n      charSet: \"utf-8\",\n      key: \"viewport\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 16\n      },\n      __self: this\n    })), __jsx(\"div\", {\n      className: \"layout\",\n      style: {\n        backgroundImage: \"url(/\".concat(background, \")\")\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24\n      },\n      __self: this\n    }, __jsx(Header, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25\n      },\n      __self: this\n    })));\n  }\n\n  var pageData;\n  var _iteratorNormalCompletion = true;\n  var _didIteratorError = false;\n  var _iteratorError = undefined;\n\n  try {\n    for (var _iterator = pages[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n      var data = _step.value;\n\n      if (data.title === pageTitle) {\n        pageData = data;\n        break;\n      }\n    }\n  } catch (err) {\n    _didIteratorError = true;\n    _iteratorError = err;\n  } finally {\n    try {\n      if (!_iteratorNormalCompletion && _iterator[\"return\"] != null) {\n        _iterator[\"return\"]();\n      }\n    } finally {\n      if (_didIteratorError) {\n        throw _iteratorError;\n      }\n    }\n  }\n\n  var _pageData = pageData,\n      blocks = _pageData.blocks;\n  var content = blocks[0];\n  var headline = content.headline,\n      subhead = content.subhead,\n      cta = content.cta,\n      background = content.background;\n  if (!background) background = (_readOnlyError(\"background\"), 'slide-one.jpg');\n  return __jsx(React.Fragment, null, __jsx(Head, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }, __jsx(\"title\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }, \"Marquee Test\"), __jsx(\"meta\", {\n    name: \"viewport\",\n    content: \"initial-scale=1.0, width=device-width\",\n    charSet: \"utf-8\",\n    key: \"viewport\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  })), __jsx(\"div\", {\n    className: \"layout\",\n    style: {\n      backgroundImage: \"url(/\".concat(background, \")\")\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }, __jsx(Header, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }), __jsx(Marquee, {\n    headline: headline,\n    subhead: subhead,\n    cta: cta,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  })));\n}","map":{"version":3,"sources":["/Users/kirkshin/Documents/code/career/job-takehomes/marquee-test-kirkshin/components/Layout.jsx"],"names":["useContext","Head","Header","DataContext","Marquee","Layout","children","pageTitle","pages","console","log","backgroundImage","background","pageData","data","title","blocks","content","headline","subhead","cta"],"mappings":";;;;AAAA,SAASA,UAAT,QAA2B,OAA3B;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,OAAO,eAAP;AAEA,eAAe,SAASC,MAAT,OAAuC;AAAA,MAAtBC,QAAsB,QAAtBA,QAAsB;AAAA,MAAZC,SAAY,QAAZA,SAAY;;AAAA,oBAClCP,UAAU,CAACG,WAAD,CADwB;AAAA,MAC5CK,KAD4C,eAC5CA,KAD4C;;AAEpDC,EAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ,EAAuBF,KAAvB;;AACA,MAAI,CAACA,KAAL,EAAY;AACV,WACE,4BACA,MAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADF,EAEE;AACE,MAAA,IAAI,EAAC,UADP;AAEE,MAAA,OAAO,EAAC,uCAFV;AAGE,MAAA,OAAO,EAAC,OAHV;AAIE,MAAA,GAAG,EAAC,UAJN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,CADA,EAWA;AAAK,MAAA,SAAS,EAAC,QAAf;AAAwB,MAAA,KAAK,EAAE;AAACG,QAAAA,eAAe,iBAAUC,UAAV;AAAhB,OAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CAXA,CADF;AAiBD;;AACD,MAAIC,QAAJ;AAtBoD;AAAA;AAAA;;AAAA;AAuBpD,yBAAiBL,KAAjB,8HAAwB;AAAA,UAAfM,IAAe;;AACtB,UAAIA,IAAI,CAACC,KAAL,KAAeR,SAAnB,EAA8B;AAC5BM,QAAAA,QAAQ,GAAGC,IAAX;AACA;AACD;AACF;AA5BmD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA,kBA6BjCD,QA7BiC;AAAA,MA6B5CG,MA7B4C,aA6B5CA,MA7B4C;AA8BpD,MAAMC,OAAO,GAAGD,MAAM,CAAC,CAAD,CAAtB;AA9BoD,MA+B5CE,QA/B4C,GA+BLD,OA/BK,CA+B5CC,QA/B4C;AAAA,MA+BlCC,OA/BkC,GA+BLF,OA/BK,CA+BlCE,OA/BkC;AAAA,MA+BzBC,GA/ByB,GA+BLH,OA/BK,CA+BzBG,GA/ByB;AAAA,MA+BpBR,UA/BoB,GA+BLK,OA/BK,CA+BpBL,UA/BoB;AAgCpD,MAAI,CAACA,UAAL,EAAiBA,UAAU,kCAAG,eAAH,CAAV;AACjB,SACE,4BACE,MAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,EAEE;AACE,IAAA,IAAI,EAAC,UADP;AAEE,IAAA,OAAO,EAAC,uCAFV;AAGE,IAAA,OAAO,EAAC,OAHV;AAIE,IAAA,GAAG,EAAC,UAJN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CADF,EAWE;AAAK,IAAA,SAAS,EAAC,QAAf;AAAwB,IAAA,KAAK,EAAE;AAACD,MAAAA,eAAe,iBAAUC,UAAV;AAAhB,KAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEE,MAAC,OAAD;AACE,IAAA,QAAQ,EAAEM,QADZ;AAEE,IAAA,OAAO,EAAEC,OAFX;AAGE,IAAA,GAAG,EAAEC,GAHP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CAXF,CADF;AAsBD","sourcesContent":["import { useContext } from 'react';\nimport Head from 'next/head';\nimport Header from './Header';\nimport DataContext from './DataContext';\nimport Marquee from './Marquee';\nimport './Layout.scss';\n\nexport default function Layout({children, pageTitle}) {\n  const { pages } = useContext(DataContext);\n  console.log('pages..', pages)\n  if (!pages) {\n    return (\n      <>\n      <Head>\n        <title>Marquee Test</title>\n        <meta\n          name=\"viewport\"\n          content=\"initial-scale=1.0, width=device-width\"\n          charSet=\"utf-8\"\n          key=\"viewport\"\n        />\n      </Head>\n      {/* add background styling.... */}\n      <div className=\"layout\" style={{backgroundImage: `url(/${background})`}}>\n        <Header />\n      </div>\n    </>\n    )\n  }\n  let pageData;\n  for (let data of pages) {\n    if (data.title === pageTitle) {\n      pageData = data;\n      break;\n    }\n  }\n  const { blocks } = pageData;\n  const content = blocks[0];\n  const { headline, subhead, cta, background } = content;\n  if (!background) background = 'slide-one.jpg'\n  return (\n    <>\n      <Head>\n        <title>Marquee Test</title>\n        <meta\n          name=\"viewport\"\n          content=\"initial-scale=1.0, width=device-width\"\n          charSet=\"utf-8\"\n          key=\"viewport\"\n        />\n      </Head>\n      {/* add background styling.... */}\n      <div className=\"layout\" style={{backgroundImage: `url(/${background})`}}>\n        <Header />\n        <Marquee \n          headline={headline} \n          subhead={subhead} \n          cta={cta} \n        />\n      </div>\n    </>\n  )\n}"]},"metadata":{},"sourceType":"module"}