{"ast":null,"code":"var _jsxFileName = \"/Users/kirkshin/Documents/code/career/job-takehomes/marquee-test-kirkshin/pages/_app.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport { useEffect, useState } from 'react';\nimport App from 'next/app';\nimport axios from 'axios';\nimport DataContext from '../components/DataContext';\n\nfunction MyApp({\n  Component,\n  pageProps\n}) {\n  // const [pages, setPages] = useState(null);\n  let pages;\n  useEffect(() => {\n    async function fetchData() {\n      const {\n        data\n      } = await axios.get('http://localhost:3000/data.json'); // setPages(data);\n\n      pages = data;\n    }\n\n    fetchData();\n  }, []);\n  return __jsx(DataContext.Provider, {\n    value: {\n      pages\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19\n    },\n    __self: this\n  }, __jsx(Component, _extends({}, pageProps, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  })));\n} // MyApp.getInitialProps = async (appContext) => {\n//   const appProps = await App.getInitialProps(appContext);\n//   const { data } = await axios.get('http://localhost:3000/data.json')\n//   const { pages } = data;\n//   return {\n//     ...appProps,\n//     pages\n//   }\n// }\n\n\nexport default MyApp;","map":{"version":3,"sources":["/Users/kirkshin/Documents/code/career/job-takehomes/marquee-test-kirkshin/pages/_app.js"],"names":["useEffect","useState","App","axios","DataContext","MyApp","Component","pageProps","pages","fetchData","data","get"],"mappings":";;;;;;AAAA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,OAAOC,GAAP,MAAgB,UAAhB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,WAAP,MAAwB,2BAAxB;;AAEA,SAASC,KAAT,CAAgB;AAAEC,EAAAA,SAAF;AAAaC,EAAAA;AAAb,CAAhB,EAA0C;AACxC;AACA,MAAIC,KAAJ;AAEAR,EAAAA,SAAS,CAAC,MAAM;AACd,mBAAeS,SAAf,GAA2B;AACzB,YAAM;AAAEC,QAAAA;AAAF,UAAW,MAAMP,KAAK,CAACQ,GAAN,CAAU,iCAAV,CAAvB,CADyB,CAEzB;;AACAH,MAAAA,KAAK,GAAGE,IAAR;AACD;;AACDD,IAAAA,SAAS;AACV,GAPQ,EAON,EAPM,CAAT;AAQA,SACE,MAAC,WAAD,CAAa,QAAb;AAAsB,IAAA,KAAK,EAAE;AAAED,MAAAA;AAAF,KAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,SAAD,eAAeD,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KADF,CADF;AAKD,C,CAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA,eAAeF,KAAf","sourcesContent":["import { useEffect, useState } from 'react';\nimport App from 'next/app';\nimport axios from 'axios';\nimport DataContext from '../components/DataContext';\n\nfunction MyApp ({ Component, pageProps }) {\n  // const [pages, setPages] = useState(null);\n  let pages;\n  \n  useEffect(() => {\n    async function fetchData() {\n      const { data } = await axios.get('http://localhost:3000/data.json');\n      // setPages(data);\n      pages = data;\n    }\n    fetchData();\n  }, [])\n  return (\n    <DataContext.Provider value={{ pages }}>\n      <Component {...pageProps} />\n    </DataContext.Provider>\n  )\n}\n\n// MyApp.getInitialProps = async (appContext) => {\n//   const appProps = await App.getInitialProps(appContext);\n//   const { data } = await axios.get('http://localhost:3000/data.json')\n//   const { pages } = data;\n//   return {\n//     ...appProps,\n//     pages\n//   }\n// }\n\nexport default MyApp;"]},"metadata":{},"sourceType":"module"}